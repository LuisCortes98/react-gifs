{"version":3,"sources":["components/AddCategory.js","handlers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","seTcategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","cat","type","value","placeholder","onChange","target","getGifst","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,GACAF,GAAc,SAAAO,GAAG,OAAGL,GAAH,mBAAiBK,OAEtCJ,EAAc,KAId,SACI,uBAAOK,KAAK,OACZC,MAAOP,EACPQ,YAAY,eACZC,SAjBa,SAACN,GAClBF,EAAcE,EAAEO,OAAOH,a,+BCLlBI,EAAQ,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACD,mCACTC,EAFU,iDAEsCC,UAAUH,GAFhD,6BACD,oCADC,SAGGI,MAAMF,GAHT,cAGVG,EAHU,gBAIKA,EAAKC,OAJV,uBAITC,EAJS,EAITA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV1B,kBAcTM,GAdS,4CAAH,sDCARO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDZ,SAAEA,GAAe,IAAD,EAEdb,mBAAS,CAC/BoB,KAAK,GACLa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WACPxB,EAASC,GACTwB,MAAK,SAAAC,GAAI,OACLC,YAAW,WACPJ,EAAS,CACTf,KAAKkB,EACLL,SAAQ,MAEV,UAEP,CAAEpB,IAEEqB,EDhBuBM,CAAa3B,GAA/Ba,EAFwB,EAE7BN,KAAYa,EAFiB,EAEjBA,QAElB,OACI,qCAED,6BAAKpB,IAEJoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACX,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEUdiB,EAzBM,WAAO,IAAD,EAGazC,mBAAS,CAAC,cAHvB,mBAGhB0C,EAHgB,KAGJ3C,EAHI,KAKvB,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCbzB8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e9eae74e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({seTcategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleSearch = (e) =>{\r\n        setinputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); //Para que no refresque la pagina\r\n        if (inputValue){\r\n            seTcategories(cat=>[inputValue,...cat])\r\n        }\r\n        setinputValue('')\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"Text\"\r\n            value={inputValue}\r\n            placeholder='Escribe algo'\r\n            onChange={handleSearch}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    seTcategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n","\r\n\r\n\r\nexport const getGifst = async(category) => {\r\n        const apiKey = 'hPYyTw7aPnc8vexDoBY1Ydu5ZAyLbTmi';\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map(img=>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n\r\n    }","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__bounce'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n"," import React, { useState ,useEffect} from 'react'\r\nimport { getGifst } from '../handlers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n \r\n export const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n     return (\r\n         <>\r\n\r\n        <h3>{category}</h3>\r\n\r\n        {loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n         <div className='card-grid'>\r\n             \r\n             {\r\n                 images.map(img=>(\r\n                    <GifGridItem\r\n                    key={img.id}\r\n                    {...img}/>))\r\n            }\r\n         </div>\r\n         </>\r\n     )\r\n }\r\n ","import { useState, useEffect } from \"react\"\r\nimport { getGifst } from \"../handlers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n        });\r\n\r\n    useEffect( () => {\r\n        getGifst(category).\r\n        then(imgs=>\r\n            setTimeout(()=>{\r\n                setstate({\r\n                data:imgs,\r\n                loading:false\r\n            })\r\n            },2000)\r\n        );\r\n    }, [ category ])\r\n\r\n    return state;\r\n};","\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\n    const [categories, seTcategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory seTcategories={seTcategories}/>\r\n        <hr/>\r\n        \r\n        <ol>\r\n            {\r\n                categories.map(category=> \r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category}/>\r\n                )\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './components/GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}